#include <Eigen/Dense>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>
#include <assert.h>
#include <sys/times.h>

#include <iostream>

using namespace std;
using namespace Eigen;

typedef enum {Obs_pdist, Obs_gaps_pdist, Poisson_pdist, Kimura_pdist, Gamma_pdist,
    PAM_dist, JTT_dist, WAG_dist, LG_dist, Blosum_dist} protein_distances;
#define MAXLENSEQ 10000 /* unite d'allocation de memoire */
#define For(i,n)                     for(i=0; i<n; i++)
#define Fors(i,n,s)                  for(i=0; i<n; i+=s)
#define FALSE 0
#define TRUE (!FALSE)
#define  NT 0       /* nucleotides */
#define  AA 1       /* amino acids */
#define MAXDIST 500 /* max for PAM distance */
#define PREC 8      /* precision of branch-lengths  */
#define PRC  100
#define LEN  1000   /* length of taxon names */

typedef struct word
{
    char name[LEN];
    struct word *suiv;
} WORD;

typedef struct pointers
{
    WORD *head;
    WORD *tail;
} POINTERS;

typedef struct _list_segments
{ /* one segment + pointer to its successor */
    int debut, fin;
    struct _list_segments *next;
} list_segments;

typedef struct
{ /* one region = name + pointer to list of segments */
    char *name;
    int hide_when_viewasprots; /* TRUE if this region shd not be enabled in view as protein mode */
    list_segments *list;
} region;

typedef struct _list_regions
{ /* region list = pointer to region +  pointer to successor in list */
    region *element;
    struct _list_regions *next;
} list_regions;

typedef struct
{
    int tot_seqs;          /* nb. of sequences */
    int tot_sel_seqs;      /* nb. of selected sequences, or 0 */
    region *active_region; /* NULL */
    int *sel_seqs;         /* array of tot_seqs ints, with 1 for each that is selected, 0 for non selected */
    int *each_length;      /* array of lengths of each sequence */
    char **seqname;        /* array of tot_seqs char * containing seq names */
    char **sequence;       /* arrary of tot_seqs char * containing sequences */
    int protein;           /* 0 for DNA, !=0 for protein */
} SEA_VIEW;

typedef    double phydbl;

struct __Seq
{
    char           *name; /* sequence name */
    int              len; /* sequence length */
    char          *state; /* sequence itself */
    short int *is_ambigu; /* is_ambigu[site] = 1 if state[site] is an ambiguous character. 0 otherwise */
};

typedef struct __AllSeq
{
    struct __Seq **c_seq; /* compressed sequences */
    phydbl *b_frq;        /* observed state frequencies */
    short int *invar;     /* 1 -> states are identical, 0 states vary */
    int *wght;            /* # of each site in c_seq */
    short int *ambigu;    /* ambigu[i]=1 is one or more of the sequences at site i display an ambiguous character */
    phydbl obs_pinvar;
    int n_otu;           /* number of taxa */
    int clean_len;       /* uncrunched sequences lenghts without gaps */
    int crunch_len;      /* crunched sequences lengths */
    int init_len;        /* length of the uncompressed sequences */
    int *sitepatt;       /* position of the patterns in the compressed alignment to the positions in the uncompressed one */
} allseq;

struct arbre;

typedef struct __Node
{
    struct __Node **v;                       /* table of pointers to neighbor nodes. Dimension = 2 x n_otu - 3 */
    struct __Node ***bip_node;               /* three lists of pointer to tip nodes. One list for each direction */
    struct __Edge  **b;                      /* table of pointers to neighbor branches */
    struct __Node ***list_of_reachable_tips; /* list of tip nodes that can be reached in each direction from that node */
    
    int *n_of_reachable_tips;                /* sizes of the list_of_reachable_tips (in each direction) */
    int *bip_size;                           /* Size of each of the three lists from bip_node */
    int  num;                                /* node number */
    int  tax;                                /* tax = 1 -> external node, else -> internal node */
    int check_branch;                        /* check_branch=1 is the corresponding branch is labelled with '*' */
    char ***bip_name;                        /* three lists of tip node names. One list for each direction */
    char *name;                              /* taxon name (if exists) */
    
    phydbl *score;                           /* score used in BIONJ to determine the best pair of nodes to agglomerate */
    phydbl  *l;                              /* lengths of the (three or one) branche(s) connected this node */
    phydbl dist_to_root;
} node;

typedef struct __Matrix
{ /* mostly used in BIONJ */
    phydbl    **P, **Q, **dist; /* observed proportions of transition, transverion and  distances between pairs of  sequences */
    
    struct arbre *tree;        /* tree */
    int *on_off;               /* on_off[i]=1 if column/line i corresponds to a node that has not been agglomerated yet */
    int  n_otu;                /* number of taxa */
    char **name;               /* sequence names */
    int  r;                    /* number of nodes that have not been agglomerated yet */
    struct __Node **tip_node;  /* array of pointer to the leaves of the tree */
    int curr_int;              /* used in the NJ/BIONJ algorithms */
    int method;                /* if method=1->NJ method is used, BIONJ otherwise */
} matrix;

typedef struct __Model
{
    int whichmodel;
    /*
     1 => JC69
     2 => K80
     3 => F81
     4 => HKY85
     5 => F84
     6 => TN93
     7 => GTR
     11 => Dayhoff
     12 => JTT
     13 => MtREV
     */
    char *modelname;
    int ns;       /* number of states (4 for ADN, 20 for AA) */
    phydbl  *pi;  /* states frequencies */
    int datatype; /* 0->DNA, 1->AA */
    
    /* ADN parameters */
    phydbl        kappa; /* transition/transversion rate */
    phydbl       lambda; /* parameter used to define the ts/tv ratios in the F84 and TN93 models */
    phydbl        alpha; /* gamma shapa parameter */
    phydbl     *r_proba; /* probabilities of the substitution rates defined by the discrete gamma distribution */
    phydbl          *rr; /* substitution rates defined by the discrete gamma distribution */
    int    asked_n_catg; /* number of categories in the discrete gamma distribution */
    int          n_catg; /* number of categories in the discrete gamma distribution */
    phydbl       pinvar; /* proportion of invariable sites */
    int           invar; /* =1 iff the substitution model takes into account invariable sites */
    
    /* Below are 'old' values of some substitution parameters (see the comments above) */
    phydbl    alpha_old;
    phydbl    kappa_old;
    phydbl   lambda_old;
    phydbl   pinvar_old;
    
    char  *custom_mod_string; /* string of characters used to define custom
     models of substitution */
    phydbl       **rr_param; /* table of pointers to relative rate parameters of the GTR or custom model */
    phydbl *rr_param_values; /* relative rate parameters of the GTR or custom model */
    int       *rr_param_num; 
    int      *n_rr_param_per_cat; /* [3][1][2] for the previous example */
    int          n_diff_rr_param; /* number of different relative substitution rates in the custom model */
    
    int    update_eigen; /* update_eigen=1-> eigen values/vectors need to be updated */
    
    double    ***Pij_rr; /* matrix of change probabilities */
    
    
    int         seq_len; /* sequence length */
    
    /* AA parameters */
    /* see PMat_Empirical in models.c for AA algorithm explanation */
    double    *mat_Q; /* 20x20 amino-acids substitution rates matrix */
    double   *mat_Vr; /* 20x20 right eigenvectors of mat_Q */
    double   *mat_Vi; /* 20x20 inverse matrix of mat_Vr */
    double   *vct_ev; /* eigen values */
    double     *expt;
    double *vct_eDmr; /* diagonal terms of a 20x20 diagonal matrix */
    double    *uexpt;
    
    
    phydbl        mr; /* mean rate = branch length/time interval */
    /* mr = -sum(i)(vct_pi[i].mat_Q[ii]) */
    
    /* term n = exp(nth eigenvalue of mat_Q / mr) */
    int     stepsize; /* stepsize=1 for nucleotide models, 3 for codon models */
    int     n_otu; /* number of taxa */
    struct __Optimiz *s_opt; /* pointer to parameters to optimize */
    int    bootstrap; /* bootstrap values are computed if bootstrap > 0.
     The value give the number of replicates */
    phydbl      *user_b_freq; /* user-defined nucleotide frequencies */
    
} model;

/*
    Global variables
*/
/*
    For the following vectors (equilibrium frequencies) and matrices
    (exchangeabilities) the correspondance between index and amino acids is:
    
    A = 0   R = 1  N = 2  D = 3  C = 4  Q = 5  E = 6  G = 7  H = 8  I = 9
    L = 10  K = 11 M = 12 F = 13 P = 14 S = 15 T = 16 W = 17 Y = 18 V = 19
    
    Values for PAM and JTT are the ones from DCMut versions by Kosiol and Goldman (2005)

*/    
static double E_LG[20] = {
    0.079066, 0.055941, 0.041977,0.053052, 0.012937, 0.040767, 0.071586,
    0.057337, 0.022355, 0.062157, 0.099081, 0.064600, 0.022951, 0.042302,
    0.044040, 0.061197, 0.053287, 0.012066, 0.034155, 0.069147
};
   
static double S_LG[20][20] = {
    0.000000, 0.425093, 0.276818, 0.395144, 2.489084, 0.969894, 1.038545,
    2.066040, 0.358858, 0.149830, 0.395337, 0.536518, 1.124035, 0.253701,
    1.177651, 4.727182, 2.139501, 0.180717, 0.218959, 2.547870, 0.425093,
    0.000000, 0.751878, 0.123954, 0.534551, 2.807908, 0.363970, 0.390192,
    2.426601, 0.126991, 0.301848, 6.326067, 0.484133, 0.052722, 0.332533,
    0.858151, 0.578987, 0.593607, 0.314440, 0.170887, 0.276818, 0.751878,
    0.000000, 5.076149, 0.528768, 1.695752, 0.541712, 1.437645, 4.509238,
    0.191503, 0.068427, 2.145078, 0.371004, 0.089525, 0.161787, 4.008358,
    2.000679, 0.045376, 0.612025, 0.083688, 0.395144, 0.123954, 5.076149,
    0.000000, 0.062556, 0.523386, 5.243870, 0.844926, 0.927114, 0.010690,
    0.015076, 0.282959, 0.025548, 0.017416, 0.394456, 1.240275, 0.425860,
    0.029890, 0.135107, 0.037967, 2.489084, 0.534551, 0.528768, 0.062556,
    0.000000, 0.084808, 0.003499, 0.569265, 0.640543, 0.320627, 0.594007,
    0.013266, 0.893680, 1.105251, 0.075382, 2.784478, 1.143480, 0.670128,
    1.165532, 1.959291, 0.969894, 2.807908, 1.695752, 0.523386, 0.084808,
    0.000000, 4.128591, 0.267959, 4.813505, 0.072854, 0.582457, 3.234294,
    1.672569, 0.035855, 0.624294, 1.223828, 1.080136, 0.236199, 0.257336,
    0.210332, 1.038545, 0.363970, 0.541712, 5.243870, 0.003499, 4.128591,
    0.000000, 0.348847, 0.423881, 0.044265, 0.069673, 1.807177, 0.173735,
    0.018811, 0.419409, 0.611973, 0.604545, 0.077852, 0.120037, 0.245034,
    2.066040, 0.390192, 1.437645, 0.844926, 0.569265, 0.267959, 0.348847,
    0.000000, 0.311484, 0.008705, 0.044261, 0.296636, 0.139538, 0.089586,
    0.196961, 1.739990, 0.129836, 0.268491, 0.054679, 0.076701, 0.358858,
    2.426601, 4.509238, 0.927114, 0.640543, 4.813505, 0.423881, 0.311484,
    0.000000, 0.108882, 0.366317, 0.697264, 0.442472, 0.682139, 0.508851,
    0.990012, 0.584262, 0.597054, 5.306834, 0.119013, 0.149830, 0.126991,
    0.191503, 0.010690, 0.320627, 0.072854, 0.044265, 0.008705, 0.108882,
    0.000000, 4.145067, 0.159069, 4.273607, 1.112727, 0.078281, 0.064105,
    1.033739, 0.111660, 0.232523, 10.649107, 0.395337, 0.301848, 0.068427,
    0.015076, 0.594007, 0.582457, 0.069673, 0.044261, 0.366317, 4.145067,
    0.000000, 0.137500, 6.312358, 2.592692, 0.249060, 0.182287, 0.302936,
    0.619632, 0.299648, 1.702745, 0.536518, 6.326067, 2.145078, 0.282959,
    0.013266, 3.234294, 1.807177, 0.296636, 0.697264, 0.159069, 0.137500,
    0.000000, 0.656604, 0.023918, 0.390322, 0.748683, 1.136863, 0.049906,
    0.131932, 0.185202, 1.124035, 0.484133, 0.371004, 0.025548, 0.893680,
    1.672569, 0.173735, 0.139538, 0.442472, 4.273607, 6.312358, 0.656604,
    0.000000, 1.798853, 0.099849, 0.346960, 2.020366, 0.696175, 0.481306,
    1.898718, 0.253701, 0.052722, 0.089525, 0.017416, 1.105251, 0.035855,
    0.018811, 0.089586, 0.682139, 1.112727, 2.592692, 0.023918, 1.798853,
    0.000000, 0.094464, 0.361819, 0.165001, 2.457121, 7.803902, 0.654683,
    1.177651, 0.332533, 0.161787, 0.394456, 0.075382, 0.624294, 0.419409,
    0.196961, 0.508851, 0.078281, 0.249060, 0.390322, 0.099849, 0.094464,
    0.000000, 1.338132, 0.571468, 0.095131, 0.089613, 0.296501, 4.727182,
    0.858151, 4.008358, 1.240275, 2.784478, 1.223828, 0.611973, 1.739990,
    0.990012, 0.064105, 0.182287, 0.748683, 0.346960, 0.361819, 1.338132,
    0.000000, 6.472279, 0.248862, 0.400547, 0.098369, 2.139501, 0.578987,
    2.000679, 0.425860, 1.143480, 1.080136, 0.604545, 0.129836, 0.584262,
    1.033739, 0.302936, 1.136863, 2.020366, 0.165001, 0.571468, 6.472279,
    0.000000, 0.140825, 0.245841, 2.188158, 0.180717, 0.593607, 0.045376,
    0.029890, 0.670128, 0.236199, 0.077852, 0.268491, 0.597054, 0.111660,
    0.619632, 0.049906, 0.696175, 2.457121, 0.095131, 0.248862, 0.140825,
    0.000000, 3.151815, 0.189510, 0.218959, 0.314440, 0.612025, 0.135107,
    1.165532, 0.257336, 0.120037, 0.054679, 5.306834, 0.232523, 0.299648,
    0.131932, 0.481306, 7.803902, 0.089613, 0.400547, 0.245841, 3.151815,
    0.000000, 0.249313, 2.547870, 0.170887, 0.083688, 0.037967, 1.959291,
    0.210332, 0.245034, 0.076701, 0.119013, 10.649107, 1.702745, 0.185202,
    1.898718, 0.654683, 0.296501, 0.098369, 2.188158, 0.189510, 0.249313,
    0.000000
};
    
static double E_WAG[20] = {
    0.0866279, 0.043972, 0.0390894, 0.0570451, 0.0193078, 0.0367281, 0.0580589,
    0.0832518, 0.0244313, 0.048466, 0.086209, 0.0620286, 0.0195027, 0.0384319,
    0.0457631, 0.0695179, 0.0610127, 0.0143859, 0.0352742, 0.0708956
};
    
static double S_WAG[20][20] = {
    0.000000, 0.551571, 0.509848, 0.738998, 1.027040, 0.908598, 1.582850,
    1.416720, 0.316954, 0.193335, 0.397915, 0.906265, 0.893496, 0.210494,
    1.438550, 3.370790, 2.121110, 0.113133, 0.240735, 2.006010, 0.551571,
    0.000000, 0.635346, 0.147304, 0.528191, 3.035500, 0.439157, 0.584665,
    2.137150, 0.186979, 0.497671, 5.351420, 0.683162, 0.102711, 0.679489,
    1.224190, 0.554413, 1.163920, 0.381533, 0.251849, 0.509848, 0.635346,
    0.000000, 5.429420, 0.265256, 1.543640, 0.947198, 1.125560, 3.956290,
    0.554236, 0.131528, 3.012010, 0.198221, 0.0961621, 0.195081, 3.974230,
    2.030060, 0.0719167, 1.086000, 0.196246, 0.738998, 0.147304, 5.429420,
    0.000000, 0.0302949, 0.616783, 6.174160, 0.865584, 0.930676, 0.039437,
    0.0848047, 0.479855, 0.103754, 0.0467304, 0.423984, 1.071760, 0.374866,
    0.129767, 0.325711, 0.152335, 1.027040, 0.528191, 0.265256, 0.0302949,
    0.000000, 0.0988179, 0.021352, 0.306674, 0.248972, 0.170135, 0.384287,
    0.0740339, 0.390482, 0.398020, 0.109404, 1.407660, 0.512984, 0.717070,
    0.543833, 1.002140, 0.908598, 3.035500, 1.543640, 0.616783, 0.0988179,
    0.000000, 5.469470, 0.330052, 4.294110, 0.113917, 0.869489, 3.894900,
    1.545260, 0.0999208, 0.933372, 1.028870, 0.857928, 0.215737, 0.227710,
    0.301281, 1.582850, 0.439157, 0.947198, 6.174160, 0.021352, 5.469470,
    0.000000, 0.567717, 0.570025, 0.127395, 0.154263, 2.584430, 0.315124,
    0.0811339, 0.682355, 0.704939, 0.822765, 0.156557, 0.196303, 0.588731,
    1.416720, 0.584665, 1.125560, 0.865584, 0.306674, 0.330052, 0.567717,
    0.000000, 0.249410, 0.0304501, 0.0613037, 0.373558, 0.174100, 0.049931,
    0.243570, 1.341820, 0.225833, 0.336983, 0.103604, 0.187247, 0.316954,
    2.137150, 3.956290, 0.930676, 0.248972, 4.294110, 0.570025, 0.249410,
    0.000000, 0.138190, 0.499462, 0.890432, 0.404141, 0.679371, 0.696198,
    0.740169, 0.473307, 0.262569, 3.873440, 0.118358, 0.193335, 0.186979,
    0.554236, 0.039437, 0.170135, 0.113917, 0.127395, 0.0304501, 0.138190,
    0.000000, 3.170970, 0.323832, 4.257460, 1.059470, 0.0999288, 0.319440,
    1.458160, 0.212483, 0.420170, 7.821300, 0.397915, 0.497671, 0.131528,
    0.0848047, 0.384287, 0.869489, 0.154263, 0.0613037, 0.499462, 3.170970,
    0.000000, 0.257555, 4.854020, 2.115170, 0.415844, 0.344739, 0.326622,
    0.665309, 0.398618, 1.800340, 0.906265, 5.351420, 3.012010, 0.479855,
    0.0740339, 3.894900, 2.584430, 0.373558, 0.890432, 0.323832, 0.257555,
    0.000000, 0.934276, 0.088836, 0.556896, 0.967130, 1.386980, 0.137505,
    0.133264, 0.305434, 0.893496, 0.683162, 0.198221, 0.103754, 0.390482,
    1.545260, 0.315124, 0.174100, 0.404141, 4.257460, 4.854020, 0.934276,
    0.000000, 1.190630, 0.171329, 0.493905, 1.516120, 0.515706, 0.428437,
    2.058450, 0.210494, 0.102711, 0.0961621, 0.0467304, 0.398020, 0.0999208,
    0.0811339, 0.049931, 0.679371, 1.059470, 2.115170, 0.088836, 1.190630,
    0.000000, 0.161444, 0.545931, 0.171903, 1.529640, 6.454280, 0.649892,
    1.438550, 0.679489, 0.195081, 0.423984, 0.109404, 0.933372, 0.682355,
    0.243570, 0.696198, 0.0999288, 0.415844, 0.556896, 0.171329, 0.161444,
    0.000000, 1.613280, 0.795384, 0.139405, 0.216046, 0.314887, 3.370790,
    1.224190, 3.974230, 1.071760, 1.407660, 1.028870, 0.704939, 1.341820,
    0.740169, 0.319440, 0.344739, 0.967130, 0.493905, 0.545931, 1.613280,
    0.000000, 4.378020, 0.523742, 0.786993, 0.232739, 2.121110, 0.554413,
    2.030060, 0.374866, 0.512984, 0.857928, 0.822765, 0.225833, 0.473307,
    1.458160, 0.326622, 1.386980, 1.516120, 0.171903, 0.795384, 4.378020,
    0.000000, 0.110864, 0.291148, 1.388230, 0.113133, 1.163920, 0.0719167,
    0.129767, 0.717070, 0.215737, 0.156557, 0.336983, 0.262569, 0.212483,
    0.665309, 0.137505, 0.515706, 1.529640, 0.139405, 0.523742, 0.110864,
    0.000000, 2.485390, 0.365369, 0.240735, 0.381533, 1.086000, 0.325711,
    0.543833, 0.227710, 0.196303, 0.103604, 3.873440, 0.420170, 0.398618,
    0.133264, 0.428437, 6.454280, 0.216046, 0.786993, 0.291148, 2.485390,
    0.000000, 0.314730, 2.006010, 0.251849, 0.196246, 0.152335, 1.002140,
    0.301281, 0.588731, 0.187247, 0.118358, 7.821300, 1.800340, 0.305434,
    2.058450, 0.649892, 0.314887, 0.232739, 1.388230, 0.365369, 0.314730,
    0.000000
};
    
static double E_PAM[20] = {
    0.087127, 0.040904, 0.040432, 0.046872, 0.033474, 0.038255, 0.049530,
    0.088612, 0.033618, 0.036886, 0.085357, 0.080482, 0.014753, 0.039772,
    0.050680, 0.069577, 0.058542, 0.010494, 0.029916, 0.064718
};

static double S_PAM[20][20] = {
    0.000000, 0.267828, 0.984474, 1.199805, 0.360016, 0.887753, 1.961167,
    2.386111, 0.228116, 0.653416, 0.406431, 0.258635, 0.717840, 0.183641,
    2.485920, 4.051870, 3.680365, 0.000000, 0.244139, 2.059564, 0.267828,
    0.000000, 0.327059, 0.000000, 0.232374, 2.439939, 0.000000, 0.087791,
    2.383148, 0.632629, 0.154924, 4.610124, 0.896321, 0.136906, 1.028313,
    1.531590, 0.265745, 2.001375, 0.078012, 0.240368, 0.984474, 0.327059,
    0.000000, 8.931515, 0.000000, 1.028509, 1.493409, 1.385352, 5.290024,
    0.768024, 0.341113, 3.148371, 0.000000, 0.138503, 0.419244, 4.885892,
    2.271697, 0.224968, 0.946940, 0.158067, 1.199805, 0.000000, 8.931515,
    0.000000, 0.000000, 1.348551, 11.388659, 1.240981, 0.868241, 0.239248,
    0.000000, 0.716913, 0.000000, 0.000000, 0.133940, 0.956097, 0.660930,
    0.000000, 0.000000, 0.178316, 0.360016, 0.232374, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.107278, 0.282729, 0.438074, 0.000000,
    0.000000, 0.000000, 0.000000, 0.187550, 1.598356, 0.162366, 0.000000,
    0.953164, 0.484678, 0.887753, 2.439939, 1.028509, 1.348551, 0.000000,
    0.000000, 7.086022, 0.281581, 6.011613, 0.180393, 0.730772, 1.519078,
    1.127499, 0.000000, 1.526188, 0.561828, 0.525651, 0.000000, 0.000000,
    0.346983, 1.961167, 0.000000, 1.493409, 11.388659, 0.000000, 7.086022,
    0.000000, 0.811907, 0.439469, 0.609526, 0.112880, 0.830078, 0.304803,
    0.000000, 0.507003, 0.793999, 0.340156, 0.000000, 0.214717, 0.367250,
    2.386111, 0.087791, 1.385352, 1.240981, 0.107278, 0.281581, 0.811907,
    0.000000, 0.106802, 0.000000, 0.071514, 0.267683, 0.170372, 0.153478,
    0.347153, 2.322243, 0.306662, 0.000000, 0.000000, 0.538165, 0.228116,
    2.383148, 5.290024, 0.868241, 0.282729, 6.011613, 0.439469, 0.106802,
    0.000000, 0.076981, 0.443504, 0.270475, 0.000000, 0.475927, 0.933709,
    0.353643, 0.226333, 0.270564, 1.265400, 0.438715, 0.653416, 0.632629,
    0.768024, 0.239248, 0.438074, 0.180393, 0.609526, 0.000000, 0.076981,
    0.000000, 2.556685, 0.460857, 3.332732, 1.951951, 0.119152, 0.247955,
    1.900739, 0.000000, 0.374834, 8.810038, 0.406431, 0.154924, 0.341113,
    0.000000, 0.000000, 0.730772, 0.112880, 0.071514, 0.443504, 2.556685,
    0.000000, 0.180629, 5.230115, 1.565160, 0.316258, 0.171432, 0.331090,
    0.461776, 0.286572, 1.745156, 0.258635, 4.610124, 3.148371, 0.716913,
    0.000000, 1.519078, 0.830078, 0.267683, 0.270475, 0.460857, 0.180629,
    0.000000, 2.411739, 0.000000, 0.335419, 0.954557, 1.350599, 0.000000,
    0.132142, 0.103850, 0.717840, 0.896321, 0.000000, 0.000000, 0.000000,
    1.127499, 0.304803, 0.170372, 0.000000, 3.332732, 5.230115, 2.411739,
    0.000000, 0.921860, 0.170205, 0.619951, 1.031534, 0.000000, 0.000000,
    2.565955, 0.183641, 0.136906, 0.138503, 0.000000, 0.000000, 0.000000,
    0.000000, 0.153478, 0.475927, 1.951951, 1.565160, 0.000000, 0.921860,
    0.000000, 0.110506, 0.459901, 0.136655, 0.762354, 6.952629, 0.123606,
    2.485920, 1.028313, 0.419244, 0.133940, 0.187550, 1.526188, 0.507003,
    0.347153, 0.933709, 0.119152, 0.316258, 0.335419, 0.170205, 0.110506,
    0.000000, 2.427202, 0.782857, 0.000000, 0.000000, 0.485026, 4.051870,
    1.531590, 4.885892, 0.956097, 1.598356, 0.561828, 0.793999, 2.322243,
    0.353643, 0.247955, 0.171432, 0.954557, 0.619951, 0.459901, 2.427202,
    0.000000, 5.436674, 0.740819, 0.336289, 0.303836, 3.680365, 0.265745,
    2.271697, 0.660930, 0.162366, 0.525651, 0.340156, 0.306662, 0.226333,
    1.900739, 0.331090, 1.350599, 1.031534, 0.136655, 0.782857, 5.436674,
    0.000000, 0.000000, 0.417839, 1.561997, 0.000000, 2.001375, 0.224968,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.270564, 0.000000,
    0.461776, 0.000000, 0.000000, 0.762354, 0.000000, 0.740819, 0.000000,
    0.000000, 0.608070, 0.000000, 0.244139, 0.078012, 0.946940, 0.000000,
    0.953164, 0.000000, 0.214717, 0.000000, 1.265400, 0.374834, 0.286572,
    0.132142, 0.000000, 6.952629, 0.000000, 0.336289, 0.417839, 0.608070,
    0.000000, 0.279379, 2.059564, 0.240368, 0.158067, 0.178316, 0.484678,
    0.346983, 0.367250, 0.538165, 0.438715, 8.810038, 1.745156, 0.103850,
    2.565955, 0.123606, 0.485026, 0.303836, 1.561997, 0.000000, 0.279379,
    0.000000
};

static double E_JTT[20] = {
    0.076862, 0.051057, 0.042546, 0.051269, 0.020279, 0.041061, 0.061820,
    0.074714, 0.022983, 0.052569, 0.091111, 0.059498, 0.023414, 0.040530,
    0.050532, 0.068225, 0.058518, 0.014336, 0.032303, 0.066374
};

static double S_JTT[20][20] = {
    0, 0.531678, 0.557967, 0.827445, 0.574478, 0.556725, 1.066681, 1.740159,
    0.219970, 0.361684, 0.310007, 0.369437, 0.469395, 0.138293, 1.959599,
    3.887095, 4.582565, 0.084329, 0.139492, 2.924161, 0.531678, 0, 0.451095,
    0.154899, 1.019843, 3.021995, 0.318483, 1.359652, 3.210671, 0.239195,
    0.372261, 6.529255, 0.431045, 0.065314, 0.710489, 1.001551, 0.650282,
    1.257961, 0.235601, 0.171995, 0.557967, 0.451095, 0, 5.549530, 0.313311,
    0.768834, 0.578115, 0.773313, 4.025778, 0.491003, 0.137289, 2.529517,
    0.330720, 0.073481, 0.121804, 5.057964, 2.351311, 0.027700, 0.700693,
    0.164525, 0.827445, 0.154899, 5.549530, 0, 0.105625, 0.521646, 7.766557,
    1.272434, 1.032342, 0.115968, 0.061486, 0.282466, 0.190001, 0.032522,
    0.127164, 0.589268, 0.425159, 0.057466, 0.453952, 0.315261, 0.574478,
    1.019843, 0.313311, 0.105625, 0, 0.091304, 0.053907, 0.546389, 0.724998,
    0.150559, 0.164593, 0.049009, 0.409202, 0.678335, 0.123653, 2.155331,
    0.469823, 1.104181, 2.114852, 0.621323, 0.556725, 3.021995, 0.768834,
    0.521646, 0.091304, 0, 3.417706, 0.231294, 5.684080, 0.078270, 0.709004,
    2.966732, 0.456901, 0.045683, 1.608126, 0.548807, 0.523825, 0.172206,
    0.254745, 0.179771, 1.066681, 0.318483, 0.578115, 7.766557, 0.053907,
    3.417706, 0, 1.115632, 0.243768, 0.111773, 0.097485, 1.731684, 0.175084,
    0.043829, 0.191994, 0.312449, 0.331584, 0.114381, 0.063452, 0.465271,
    1.740159, 1.359652, 0.773313, 1.272434, 0.546389, 0.231294, 1.115632, 0,
    0.201696, 0.053769, 0.069492, 0.269840, 0.130379, 0.050212, 0.208081,
    1.874296, 0.316862, 0.544180, 0.052500, 0.470140, 0.219970, 3.210671,
    4.025778, 1.032342, 0.724998, 5.684080, 0.243768, 0.201696, 0, 0.181788,
    0.540571, 0.525096, 0.329660, 0.453428, 1.141961, 0.743458, 0.477355,
    0.128193, 5.848400, 0.121827, 0.361684, 0.239195, 0.491003, 0.115968,
    0.150559, 0.078270, 0.111773, 0.053769, 0.181788, 0, 2.335139, 0.202562,
    4.831666, 0.777090, 0.098580, 0.405119, 2.553806, 0.134510, 0.303445,
    9.533943, 0.310007, 0.372261, 0.137289, 0.061486, 0.164593, 0.709004,
    0.097485, 0.069492, 0.540571, 2.335139, 0, 0.146481, 3.856906, 2.500294,
    1.060504, 0.592511, 0.272514, 0.530324, 0.241094, 1.761439, 0.369437,
    6.529255, 2.529517, 0.282466, 0.049009, 2.966732, 1.731684, 0.269840,
    0.525096, 0.202562, 0.146481, 0, 0.624581, 0.024521, 0.216345, 0.474478,
    0.965641, 0.089134, 0.087904, 0.124066, 0.469395, 0.431045, 0.330720,
    0.190001, 0.409202, 0.456901, 0.175084, 0.130379, 0.329660, 4.831666,
    3.856906, 0.624581, 0, 0.436181, 0.164215, 0.285564, 2.114728, 0.201334,
    0.189870, 3.038533, 0.138293, 0.065314, 0.073481, 0.032522, 0.678335,
    0.045683, 0.043829, 0.050212, 0.453428, 0.777090, 2.500294, 0.024521,
    0.436181, 0, 0.148483, 0.943971, 0.138904, 0.537922, 5.484236, 0.593478,
    1.959599, 0.710489, 0.121804, 0.127164, 0.123653, 1.608126, 0.191994,
    0.208081, 1.141961, 0.098580, 1.060504, 0.216345, 0.164215, 0.148483, 0,
    2.788406, 1.176961, 0.069965, 0.113850, 0.211561, 3.887095, 1.001551,
    5.057964, 0.589268, 2.155331, 0.548807, 0.312449, 1.874296, 0.743458,
    0.405119, 0.592511, 0.474478, 0.285564, 0.943971, 2.788406, 0, 4.777647,
    0.310927, 0.628608, 0.408532, 4.582565, 0.650282, 2.351311, 0.425159,
    0.469823, 0.523825, 0.331584, 0.316862, 0.477355, 2.553806, 0.272514,
    0.965641, 2.114728, 0.138904, 1.176961, 4.777647, 0, 0.080556, 0.201094,
    1.143980, 0.084329, 1.257961, 0.027700, 0.057466, 1.104181, 0.172206,
    0.114381, 0.544180, 0.128193, 0.134510, 0.530324, 0.089134, 0.201334,
    0.537922, 0.069965, 0.310927, 0.080556, 0, 0.747889, 0.239697, 0.139492,
    0.235601, 0.700693, 0.453952, 2.114852, 0.254745, 0.063452, 0.052500,
    5.848400, 0.303445, 0.241094, 0.087904, 0.189870, 5.484236, 0.113850,
    0.628608, 0.201094, 0.747889, 0, 0.165473, 2.924161, 0.171995, 0.164525,
    0.315261, 0.621323, 0.179771, 0.465271, 0.470140, 0.121827, 9.533943,
    1.761439, 0.124066, 3.038533, 0.593478, 0.211561, 0.408532, 1.143980,
    0.239697, 0.165473, 0
};

static double E_BLO[20] = {
    0.074, 0.052, 0.045, 0.054, 0.025, 0.034, 0.054, 0.074, 0.026, 0.068, 0.099,
    0.058, 0.025, 0.047, 0.039, 0.057, 0.051, 0.013, 0.032, 0.073
};

static double S_BLO[20][20] = {
    0.000000000000, 0.735790389698, 0.485391055466, 0.543161820899,
    1.459995310470, 1.199705704602, 1.170949042800, 1.955883574960,
    0.716241444998, 0.605899003687, 0.800016530518, 1.295201266783,
    1.253758266664, 0.492964679748, 1.173275900924, 4.325092687057,
    1.729178019485, 0.465839367725, 0.718206697586, 2.187774522005,
    0.735790389698, 0.000000000000, 1.297446705134, 0.500964408555,
    0.227826574209, 3.020833610064, 1.360574190420, 0.418763308518,
    1.456141166336, 0.232036445142, 0.622711669692, 5.411115141489,
    0.983692987457, 0.371644693209, 0.448133661718, 1.122783104210,
    0.914665954563, 0.426382310122, 0.720517441216, 0.438388343772,
    0.485391055466, 1.297446705134, 0.000000000000, 3.180100048216,
    0.397358949897, 1.839216146992, 1.240488508640, 1.355872344485,
    2.414501434208, 0.283017326278, 0.211888159615, 1.593137043457,
    0.648441278787, 0.354861249223, 0.494887043702, 2.904101656456,
    1.898173634533, 0.191482046247, 0.538222519037, 0.312858797993,
    0.543161820899, 0.500964408555, 3.180100048216, 0.000000000000,
    0.240836614802, 1.190945703396, 3.761625208368, 0.798473248968,
    0.778142664022, 0.418555732462, 0.218131577594, 1.032447924952,
    0.222621897958, 0.281730694207, 0.730628272998, 1.582754142065,
    0.934187509431, 0.145345046279, 0.261422208965, 0.258129289418,
    1.459995310470, 0.227826574209, 0.397358949897, 0.240836614802,
    0.000000000000, 0.329801504630, 0.140748891814, 0.418203192284,
    0.354058109831, 0.774894022794, 0.831842640142, 0.285078800906,
    0.767688823480, 0.441337471187, 0.356008498769, 1.197188415094,
    1.119831358516, 0.527664418872, 0.470237733696, 1.116352478606,
    1.199705704602, 3.020833610064, 1.839216146992, 1.190945703396,
    0.329801504630, 0.000000000000, 5.528919177928, 0.609846305383,
    2.435341131140, 0.236202451204, 0.580737093181, 3.945277674515,
    2.494896077113, 0.144356959750, 0.858570575674, 1.934870924596,
    1.277480294596, 0.758653808642, 0.958989742850, 0.530785790125,
    1.170949042800, 1.360574190420, 1.240488508640, 3.761625208368,
    0.140748891814, 5.528919177928, 0.000000000000, 0.423579992176,
    1.626891056982, 0.186848046932, 0.372625175087, 2.802427151679,
    0.555415397470, 0.291409084165, 0.926563934846, 1.769893238937,
    1.071097236007, 0.407635648938, 0.596719300346, 0.524253846338,
    1.955883574960, 0.418763308518, 1.355872344485, 0.798473248968,
    0.418203192284, 0.609846305383, 0.423579992176, 0.000000000000,
    0.539859124954, 0.189296292376, 0.217721159236, 0.752042440303,
    0.459436173579, 0.368166464453, 0.504086599527, 1.509326253224,
    0.641436011405, 0.508358924638, 0.308055737035, 0.253340790190,
    0.716241444998, 1.456141166336, 2.414501434208, 0.778142664022,
    0.354058109831, 2.435341131140, 1.626891056982, 0.539859124954,
    0.000000000000, 0.252718447885, 0.348072209797, 1.022507035889,
    0.984311525359, 0.714533703928, 0.527007339151, 1.117029762910,
    0.585407090225, 0.301248600780, 4.218953969389, 0.201555971750,
    0.605899003687, 0.232036445142, 0.283017326278, 0.418555732462,
    0.774894022794, 0.236202451204, 0.186848046932, 0.189296292376,
    0.252718447885, 0.000000000000, 3.890963773304, 0.406193586642,
    3.364797763104, 1.517359325954, 0.388355409206, 0.357544412460,
    1.179091197260, 0.341985787540, 0.674617093228, 8.311839405458,
    0.800016530518, 0.622711669692, 0.211888159615, 0.218131577594,
    0.831842640142, 0.580737093181, 0.372625175087, 0.217721159236,
    0.348072209797, 3.890963773304, 0.000000000000, 0.445570274261,
    6.030559379572, 2.064839703237, 0.374555687471, 0.352969184527,
    0.915259857694, 0.691474634600, 0.811245856323, 2.231405688913,
    1.295201266783, 5.411115141489, 1.593137043457, 1.032447924952,
    0.285078800906, 3.945277674515, 2.802427151679, 0.752042440303,
    1.022507035889, 0.406193586642, 0.445570274261, 0.000000000000,
    1.073061184332, 0.266924750511, 1.047383450722, 1.752165917819,
    1.303875200799, 0.332243040634, 0.717993486900, 0.498138475304,
    1.253758266664, 0.983692987457, 0.648441278787, 0.222621897958,
    0.767688823480, 2.494896077113, 0.555415397470, 0.459436173579,
    0.984311525359, 3.364797763104, 6.030559379572, 1.073061184332,
    0.000000000000, 1.773855168830, 0.454123625103, 0.918723415746,
    1.488548053722, 0.888101098152, 0.951682162246, 2.575850755315,
    0.492964679748, 0.371644693209, 0.354861249223, 0.281730694207,
    0.441337471187, 0.144356959750, 0.291409084165, 0.368166464453,
    0.714533703928, 1.517359325954, 2.064839703237, 0.266924750511,
    1.773855168830, 0.000000000000, 0.233597909629, 0.540027644824,
    0.488206118793, 2.074324893497, 6.747260430801, 0.838119610178,
    1.173275900924, 0.448133661718, 0.494887043702, 0.730628272998,
    0.356008498769, 0.858570575674, 0.926563934846, 0.504086599527,
    0.527007339151, 0.388355409206, 0.374555687471, 1.047383450722,
    0.454123625103, 0.233597909629, 0.000000000000, 1.169129577716,
    1.005451683149, 0.252214830027, 0.369405319355, 0.496908410676,
    4.325092687057, 1.122783104210, 2.904101656456, 1.582754142065,
    1.197188415094, 1.934870924596, 1.769893238937, 1.509326253224,
    1.117029762910, 0.357544412460, 0.352969184527, 1.752165917819,
    0.918723415746, 0.540027644824, 1.169129577716, 0.000000000000,
    5.151556292270, 0.387925622098, 0.796751520761, 0.561925457442,
    1.729178019485, 0.914665954563, 1.898173634533, 0.934187509431,
    1.119831358516, 1.277480294596, 1.071097236007, 0.641436011405,
    0.585407090225, 1.179091197260, 0.915259857694, 1.303875200799,
    1.488548053722, 0.488206118793, 1.005451683149, 5.151556292270,
    0.000000000000, 0.513128126891, 0.801010243199, 2.253074051176,
    0.465839367725, 0.426382310122, 0.191482046247, 0.145345046279,
    0.527664418872, 0.758653808642, 0.407635648938, 0.508358924638,
    0.301248600780, 0.341985787540, 0.691474634600, 0.332243040634,
    0.888101098152, 2.074324893497, 0.252214830027, 0.387925622098,
    0.513128126891, 0.000000000000, 4.054419006558, 0.266508731426,
    0.718206697586, 0.720517441216, 0.538222519037, 0.261422208965,
    0.470237733696, 0.958989742850, 0.596719300346, 0.308055737035,
    4.218953969389, 0.674617093228, 0.811245856323, 0.717993486900,
    0.951682162246, 6.747260430801, 0.369405319355, 0.796751520761,
    0.801010243199, 4.054419006558, 0.000000000000, 1.000000000000,
    2.187774522005, 0.438388343772, 0.312858797993, 0.258129289418,
    1.116352478606, 0.530785790125, 0.524253846338, 0.253340790190,
    0.201555971750, 8.311839405458, 2.231405688913, 0.498138475304,
    2.575850755315, 0.838119610178, 0.496908410676, 0.561925457442,
    2.253074051176, 0.266508731426, 1.000000000000, 0.000000000000
};
